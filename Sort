#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

// Sequential bubble sort
void bubble_sort(vector<int>& arr) {
    int n = arr.size();
    bool swapped = true;
    while (swapped) {
        swapped = false;
        for (int i = 1; i < n; ++i) {
            if (arr[i - 1] > arr[i]) {
                swap(arr[i - 1], arr[i]);
                swapped = true;
            }
        }
    }
}

// Merge sort (sequential)
void merge_sort(vector<int>& arr) {
    if (arr.size() <= 1) return;

    int mid = arr.size() / 2;
    vector<int> left(arr.begin(), arr.begin() + mid);
    vector<int> right(arr.begin() + mid, arr.end());

    merge_sort(left);
    merge_sort(right);

    merge(left.begin(), left.end(), right.begin(), right.end(), arr.begin());
}

void show_result(string name, vector<int>& arr) {
    cout << name << ": ";
    for (int i = 0; i < arr.size(); ++i)
        cout << arr[i] << " ";
    cout << endl;
}

int main() {
    vector<int> arr = {4, 2, 6, 8, 1, 3, 9, 5, 7};

    show_result("Original", arr);

    vector<int> bubble = arr;
    bubble_sort(bubble);
    show_result("Bubble sort", bubble);

    vector<int> merge = arr;
    merge_sort(merge);
    show_result("Merge sort", merge);

    return 0;
}







